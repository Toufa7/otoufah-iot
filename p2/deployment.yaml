apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: app3
  name: app3
spec:
  type: NodePort
  ports:
  - port: 9898
    protocol: TCP
    targetPort: 8080
  selector:
    app: app3
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: app2
  name: app2
spec:
  type: NodePort
  ports:
  - port: 9898
    protocol: TCP
    targetPort: 8080
  selector:
    app: app2
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: app1
  name: app1
spec:
  type: NodePort
  ports:
  - port: 9898
    protocol: TCP
    targetPort: 8080
  selector:
    app: app1
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app1
  name: app1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: app1
    spec:
      containers:
      - image: paulbouwer/hello-kubernetes:1.10
        name: hello-app
        ports:
          - containerPort: 8080        
        env:
        - name: MESSAGE
          value: "Salam from app1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app3
  name: app3
spec:
  replicas: 3
  selector:
    matchLabels:
      app: app3
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: app3
    spec:
      containers:
      - image: paulbouwer/hello-kubernetes:1.10
        name: hello-app
        ports:
          - containerPort: 8080      
        env:
        - name: MESSAGE
          value: "Salam from the default entry app3"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app2
  name: app2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app2
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: app2
    spec:
      containers:
      - image: paulbouwer/hello-kubernetes:1.10
        name: hello-app
        ports:
          - containerPort: 8080
        env:
        - name: MESSAGE
          value: "Salam from app2"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
spec:
  rules:
  - host: app1.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app1
            port:
              number: 8080
  - host: app2.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app2
            port:
              number: 8080
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app3
            port:
              number: 9898  